{"version":3,"sources":["components/Form.js","components/Message.js","components/Header.js","base.js","App.js","components/Connection.js","components/Not-Found.js","index.js"],"names":["Formulaire","state","message","length","props","handleSubmit","event","preventDefault","createMessage","addMessage","nickname","setState","handleChange","target","value","handleKeyUp","key","className","onSubmit","this","onKeyUp","require","maxLength","onChange","placeholder","type","Component","Message","isUser","Header","channel","base","firebase","initializeApp","apiKey","authDomain","databaseURL","Rebase","createClass","database","App","messages","match","params","messageRef","createRef","Date","now","Object","keys","slice","forEach","ref","syncState","context","current","scrollTop","scrollHeight","removeBinding","map","CSSTransition","timeout","classNames","TransitionGroup","Form","Connection","goToChat","name","push","to","pattern","required","NotFound","Root","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70d14d90.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Formulaire extends Component {\r\n  state = {\r\n    message: \"\",\r\n    length: this.props.length\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.createMessage();\r\n  };\r\n\r\n  createMessage = () => {\r\n    const { addMessage, nickname, length } = this.props;\r\n\r\n    const message = {\r\n      nickname,\r\n      message: this.state.message\r\n    };\r\n\r\n    addMessage(message);\r\n\r\n    // Reset\r\n    this.setState({ message: \"\", length });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const message = event.target.value; // Obtient la valeur actuel du champs de texte\r\n    const length = this.props.length - message.length;\r\n\r\n    this.setState({ message, length });\r\n  };\r\n\r\n  handleKeyUp = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      this.createMessage();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={this.handleSubmit}\r\n        onKeyUp={this.handleKeyUp}\r\n      >\r\n        <textarea\r\n          require\r\n          maxLength={this.props.length}\r\n          onChange={this.handleChange}\r\n          value={this.state.message}\r\n          placeholder=\"Start writing something ...\"\r\n        />\r\n        <div className=\"info\">{this.state.length}</div>\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Formulaire;\r\n","import React from \"react\";\r\n\r\nconst Message = ({ nickname, message, isUser }) => {\r\n  if (isUser(nickname)) {\r\n    return <p className=\"user-message\">{message}</p>;\r\n  } else {\r\n    return (\r\n      <p className=\"not-user-message\">\r\n        <strong>{nickname}: </strong>\r\n        {message}\r\n      </p>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\nconst Header = ({ channel }) => {\r\n  return (\r\n    <header>\r\n      <h1>{channel}</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyBzXm11b9in2hn84hBmJt8GXCVqtJJiRC0\",\r\n  authDomain: \"mychat-e82c8.firebaseapp.com\",\r\n  databaseURL: \"https://mychat-e82c8-default-rtdb.europe-west1.firebasedatabase.app\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebase.database());\r\n\r\nexport { firebaseApp }; // App init\r\n\r\nexport default base;\r\n","import React, { Component, createRef } from \"react\";\nimport \"./App.css\";\nimport \"./animation.css\";\n\n// Components\nimport Form from \"./components/Form\";\nimport Message from \"./components/Message\";\nimport Header from \"./components/Header\";\n\n// Firebase\nimport base from \"./base\";\n\n// Animation\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass App extends Component {\n  state = {\n    messages: {},\n    nickname: this.props.match.params.nickname,\n    channel: this.props.match.params.channel\n  };\n\n  messageRef = createRef();\n\n  // Sync messages for the channel\n  componentDidMount() {\n    this.ref = base.syncState(`/${this.state.channel}`, {\n      context: this,\n      state: \"messages\"\n    });\n  }\n\n  componentDidUpdate() {\n    // Scroll to recent message\n    const ref = this.messageRef.current;\n    ref.scrollTop = ref.scrollHeight;\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addMessage = (message) => {\n    const messages = { ...this.state.messages };\n    messages[`message-${Date.now()}`] = message; // Message format\n\n    Object.keys(messages)\n      .slice(0, -10) // Keep the last 10 messages\n      .forEach((key) => {\n        messages[key] = null; // Delete the last message\n      });\n\n    this.setState({ messages });\n  };\n\n  isUser = (nickname) => nickname === this.state.nickname;\n\n  render() {\n    const messages = Object.keys(this.state.messages).map((key) => (\n      <CSSTransition key={key} timeout={200} classNames=\"fade\">\n        <Message\n          nickname={this.state.messages[key].nickname}\n          message={this.state.messages[key].message}\n          isUser={this.isUser}\n        />\n      </CSSTransition>\n    ));\n\n    return (\n      <div className=\"box\">\n        <Header channel={this.state.channel} />\n        <div>\n          <div className=\"messages\" ref={this.messageRef}>\n            <TransitionGroup className=\"message\">{messages}</TransitionGroup>\n          </div>\n          <Form\n            addMessage={this.addMessage}\n            nickname={this.state.nickname}\n            length={140}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Connection extends Component {\r\n  state = {\r\n    nickname: \"\",\r\n    channel: \"\",\r\n    goToChat: false\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ goToChat: true });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.goToChat) {\r\n      return (\r\n        <Redirect push to={`/${this.state.channel}/${this.state.nickname}`} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"connexionBox\">\r\n        <form className=\"connexion\" onSubmit={this.handleSubmit}>\r\n          <h1 className=\"connexionTitle\">MyChat</h1>\r\n          <input\r\n            name=\"channel\"\r\n            value={this.state.channel}\r\n            onChange={this.handleChange}\r\n            pattern=\"[A-Za-z]{1,}\"\r\n            type=\"text\"\r\n            placeholder=\"Channel\"\r\n            required\r\n          />\r\n          <input\r\n            name=\"nickname\"\r\n            value={this.state.nickname}\r\n            onChange={this.handleChange}\r\n            pattern=\"[A-Za-z]{1,}\"\r\n            type=\"text\"\r\n            placeholder=\"Nickname\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Join</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Connection;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return <h2 className=\"notFound\">I think you got lost!</h2>;\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// Components\nimport Connection from \"./components/Connection\";\nimport NotFound from \"./components/Not-Found\";\n\nconst Root = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Connection} />\n      <Route path=\"/:channel/:nickname\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}